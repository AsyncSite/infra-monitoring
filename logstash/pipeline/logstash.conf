input {
  beats {
    port => 5044
  }
}

filter {
  # JSON 로그 파싱
  json {
    source => "message"
    target => "log"
    skip_on_invalid_json => true
  }
  
  # 파싱된 필드를 최상위로 이동
  if [log] {
    mutate {
      add_field => {
        "service" => "%{[log][service]}"
        "level" => "%{[log][level]}"
        "logger" => "%{[log][logger_name]}"
        "thread" => "%{[log][thread_name]}"
        "correlation_id" => "%{[log][corrId]}"
        "environment" => "%{[log][environment]}"
      }
      remove_field => [ "[log][@version]" ]
    }
    
    # 로그 레벨을 태그로 추가
    if [log][level] == "ERROR" {
      mutate {
        add_tag => [ "error" ]
      }
    }
    if [log][level] == "WARN" {
      mutate {
        add_tag => [ "warning" ]
      }
    }
    
    # timestamp 파싱
    date {
      match => [ "[log][@timestamp]", "ISO8601" ]
      target => "@timestamp"
    }
    
    # 원본 message 필드를 파싱된 메시지로 교체
    mutate {
      replace => { "message" => "%{[log][message]}" }
    }
  }
}

output {
  elasticsearch {
    hosts => [ "http://elasticsearch:9200" ]
    index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
  }
  
  # 디버깅용 stdout 출력 (개발 환경에서만 사용)
  # stdout { codec => rubydebug }
}
input {
  beats {
    port => 5044
  }
}

filter {
  # Docker 컨테이너로부터 온 로그의 경우, message 필드가 이미 JSON 문자열일 수 있음
  if [container] and [container][name] {
    # Docker 로그에서 메시지 추출 (이미 Filebeat가 처리했을 수 있음)
    if [message] =~ /^\{.*\}$/ {
      json {
        source => "message"
        target => "parsed_log"
        skip_on_invalid_json => true
      }
    }
  } else {
    # 로컬 파일 기반 로그는 직접 JSON 파싱
    json {
      source => "message"
      target => "parsed_log"
      skip_on_invalid_json => true
    }
  }
  
  # 파싱된 필드 처리
  if [parsed_log] {
    # 필드 존재 여부 확인 후 추가
    if [parsed_log][service] {
      mutate {
        add_field => { "service" => "%{[parsed_log][service]}" }
      }
    }
    if [parsed_log][level] {
      mutate {
        add_field => { "level" => "%{[parsed_log][level]}" }
      }
    }
    if [parsed_log][logger_name] {
      mutate {
        add_field => { "logger" => "%{[parsed_log][logger_name]}" }
      }
    }
    if [parsed_log][thread_name] {
      mutate {
        add_field => { "thread" => "%{[parsed_log][thread_name]}" }
      }
    }
    if [parsed_log][corrId] {
      mutate {
        add_field => { "correlation_id" => "%{[parsed_log][corrId]}" }
      }
    }
    if [parsed_log][environment] {
      mutate {
        add_field => { "environment" => "%{[parsed_log][environment]}" }
      }
    }
    
    # 로그 레벨을 태그로 추가
    if [parsed_log][level] == "ERROR" {
      mutate {
        add_tag => [ "error" ]
      }
    }
    if [parsed_log][level] == "WARN" {
      mutate {
        add_tag => [ "warning" ]
      }
    }
    
    # timestamp 파싱
    if [parsed_log][@timestamp] {
      date {
        match => [ "[parsed_log][@timestamp]", "ISO8601" ]
        target => "@timestamp"
      }
    }
    
    # 원본 message 필드를 파싱된 메시지로 교체
    if [parsed_log][message] {
      mutate {
        replace => { "message" => "%{[parsed_log][message]}" }
      }
    }
    
    # 임시 필드 제거
    mutate {
      remove_field => [ "parsed_log" ]
    }
  }
  
  # Docker 컨테이너 이름을 service 필드에 추가 (service 필드가 없는 경우)
  if ![service] and [container][name] {
    mutate {
      add_field => { "service" => "%{[container][name]}" }
    }
  }
}

output {
  elasticsearch {
    hosts => [ "http://elasticsearch:9200" ]
    index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
  }
  
  # 디버깅용 stdout 출력 (개발 환경에서만 사용)
  # stdout { codec => rubydebug }
}
name: Deploy ELK Stack to Mini PC

on:
  push:
    branches:
      - main
      - 'feature/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. 배포할 코드(설정 파일 포함)를 GitHub Actions 러너 환경으로 가져옵니다.
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 러너에 있는 설정 파일들을 원격 Mini PC로 복사합니다.
      - name: Copy config files to Mini PC
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.MINI_PC_HOST }}
          username: ${{ secrets.MINI_PC_USER }}
          key: ${{ secrets.MINI_PC_SSH_KEY }}
          port: 2222
          source: "./docker-compose.yml,./docker-compose.filebeat.yml,./docker-compose.filebeat.server.yml,./filebeat-server.yml,./logstash"
          target: "~/elk-stack"
          rm: true # 복사 전 원격 디렉터리 내용 삭제

      # 3. Mini PC에 접속하여 Docker Compose를 실행합니다.
      - name: Execute docker-compose on Mini PC
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MINI_PC_HOST }}
          username: ${{ secrets.MINI_PC_USER }}
          key: ${{ secrets.MINI_PC_SSH_KEY }}
          port: 2222
          script: |
            cd ~/elk-stack
            
            # 1. 메인 ELK 스택 (Elasticsearch, Logstash, Kibana) 실행
            echo "Starting ELK Stack..."
            docker compose -f docker-compose.yml up -d
            
            # 2. Filebeat 설정 파일 권한 변경 (올바른 파일 대상)
            echo "Changing ownership of filebeat-server.yml..."
            sudo chown root:root ./filebeat-server.yml
            
            # 3. Filebeat 에이전트 실행
            echo "Starting Filebeat Agent..."
            docker compose -f docker-compose.filebeat.yml -f docker-compose.filebeat.server.yml up -d